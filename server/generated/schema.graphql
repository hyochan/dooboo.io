### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar AuthType

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

scalar Decimal

type DoobooStats {
  githubId: String!
  json: PluginJSON!
  plugin: Plugin!
  pluginStats: PluginStats!
  score: Int!
}

scalar GenderType

type Image {
  createdAt: DateTime
  id: ID
  imageUrl: String
  thumbUrl: String

  """Thumbnail URL for high resolution"""
  thumbUrlHigh: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Language {
  color: String
  name: String
  size: Int
}

type Mutation {
  updateDoobooGithub(
    """The unique github login value of the user."""
    login: String!
  ): DoobooStats
}

type Newsletter {
  createdAt: DateTime
  deletedAt: DateTime
  email: ID
  updatedAt: DateTime
}

type Plugin {
  apiURL: String!
  createdAt: DateTime
  deletedAt: DateTime
  description: String
  json: JSON
  name: ID!
  updatedAt: DateTime
  userPlugins: [UserPlugin]
}

type PluginJSON {
  avatarUrl: String
  bio: String
  languages: [Language!]!
  login: String!
  score: Int
}

type PluginStats {
  earth: Stats!
  fire: Stats!
  gold: Stats!
  person: Stats!
  tree: Stats!
  water: Stats!
}

type Query {
  ok: Boolean!
}

type Stats {
  description: String
  icon: String
  id: ID
  name: String!
  score: Decimal
  statsElements: JSON
}

type Tier {
  description: String
  icon: String
  id: ID!
  name: String!
  score: Decimal
}

type Trophy {
  id: ID!
  points: Int!
  score: Decimal!
  type: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  birthday: DateTime
  blog: String
  certified: Boolean
  company: String
  createdAt: DateTime
  deletedAt: DateTime
  description: String
  email: String
  gender: GenderType
  githubLogin: String
  githubURL: String

  """Firebase user id"""
  id: ID!
  image: Image
  locale: String
  location: String
  name: String
  phone: String
  twitter: String
  updatedAt: DateTime
}

type UserPlugin {
  avatarUrl: String
  certificationNo: Int
  certifiedAt: DateTime
  description: String
  githubId: String!
  json: JSON
  login: ID!
  score: Int!
  stats: [Stats]
  trophies: [Trophy]
  userName: String
  viewCount: Int
}

input UserUpdateInput {
  birthday: DateTime
  description: String
  email: String
  gender: GenderType
  githubLogin: String
  id: ID!
  name: String
  phone: String
  photoURL: String
  thumbURL: String
}